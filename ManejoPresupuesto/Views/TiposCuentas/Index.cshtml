@{
	ViewData["Title"] = "Tipos Cuentas";
}


@model IEnumerable<TipoCuenta>

<h1>Tipos Cuenta</h1>

<h5>El tipo cuenta se refiere a cómo podemos agrupar cuentas.
	Ejemplos: Préstamos, Tarjetas de crédito, etc. </h5>

<a asp-action="Crear" asp-controller="TiposCuentas" class="btn btn-primary mb-3">Crear Nuevo</a>

<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach (var tipoCuenta in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@tipoCuenta.Id" class="ids"/>
                    <a asp-action="Editar" asp-route-id="@tipoCuenta.Id" class="btn btn-primary">Editar</a>
                    <a asp-action="Borrar" asp-route-id="@tipoCuenta.Id" class="btn btn-danger">Borrar</a>
                </td>
                <td>@tipoCuenta.Nombre</td>
            </tr>
        }
    </tbody>
</table>


@section Scripts{
    <script>

        const urlOrdenar = '@Url.Action("Ordenar")';



        $(function(){
            $("#reordenable").sortable({
                stop: async function(e, ui){
                   await actualizarOrdenes();
                }
            });
        });

       async function actualizarOrdenes(){
            const ids = obtenerIdsDeElementos();
            await enviarIdsAlBackend(ids);
        }


        function obtenerIdsDeElementos(){
            const ids = $('.ids').map(function(){
                return $(this).val();
            }).get();



            return ids;
        }


       async function enviarIdsAlBackend(ids){
             var data = JSON.stringify(ids);

             await fetch(urlOrdenar, {
                 method: "POST",
                 body: data,
                 headers: {
                     'Content-Type' : 'application/json'
                 }
             });
        }

    </script>
}